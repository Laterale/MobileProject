// Generated by Dagger (https://dagger.dev).
package com.example.partyapp.di;

import android.content.Context;
import com.example.partyapp.data.repository.UserScansEventRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideUserScansEventRepositoryFactory implements Factory<UserScansEventRepository> {
  private final Provider<Context> contextProvider;

  public DataModule_ProvideUserScansEventRepositoryFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public UserScansEventRepository get() {
    return provideUserScansEventRepository(contextProvider.get());
  }

  public static DataModule_ProvideUserScansEventRepositoryFactory create(
      Provider<Context> contextProvider) {
    return new DataModule_ProvideUserScansEventRepositoryFactory(contextProvider);
  }

  public static UserScansEventRepository provideUserScansEventRepository(Context context) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideUserScansEventRepository(context));
  }
}
